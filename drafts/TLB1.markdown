---
layout: post
title:  "TLB(1):讨论班讲课 1"
date:   2018-10-10 09:49:00
categories: Note
permalink: /tlb/1/
---
<div class="post-style">

<p>今天呢我想和大家讲讲计算机，把我最近学到的有关计算机方面的东西与大家分享，当然我也只是个初学者，可能会有很多地方讲得不对。为什么要学计算机要讲计算机呢？我觉得，一是它重要，二是它神奇。</p>

<h1>1 为什么重要</h1>

<p>为什么说它重要呢？大家想想如果现在让计算机从我们的身边彻底地消失，我们的生活会是怎样的呢？大家能想到的可能是：一，电脑没有了，二，手机没有了，大家可能想不到的是：如果现在计算机从我们身边彻底消失，那么今晚我们要出这个大楼啊，就得采取暴力方式，把楼下那个门砸了。为什么这么说呢，因为这张银行卡没有了，这张银行卡实际上是粘贴或嵌有集成电路芯片的一种便携式卡片塑料，其中包含了微处理器、输入/输出接口以及存储器，提供了数据的运算、访问控制及存储功能。</p>

<p>所以呢，我说它重要，是因为计算机与我们的生活可以说是如影随形，电脑、手机以及各种各样的嵌入式设备几乎占领了我们生活的每个角落，刚刚说的这个银行卡就是嵌入设备的一种。下面呢，我来说一下什么是嵌入式设备，嵌入式设备是一种嵌入机械或电气系统内部、具有专一功能和实时计算性能的计算机设备，这概念听起来有点抽象，我们就把嵌入式设备理解为一台微型计算机就好了，现代嵌入式设备基于单片机，而单片机的全称就是单片微型计算机，它是把中央处理器、存储器、定时/计数器、各种输入输出接口等集成在一块集成电路芯片上的微型计算机。我们日常生活中常见的比如 ATM 机、KTV 里的点唱机、微波炉、全自动洗衣机、机顶盒、交换机、路由器、数码相机、MP4、智能玩具等等均属于嵌入式设备的范畴。</p>

<p>我说它重要呢，还有一个原因，我们都说我们现在处在一个数据时代里，我们要收集数据、要管理数据、要分析数据，这些事情可以说没有哪一个能离开计算机。后面我们还会讲到计算机呢，实际上就是一台可编程数据处理器。</p>

<h1>2 为什么神奇</h1>

<p>我说它神奇，大家猜一猜自人类历史上第一台电子计算机诞生到现在一共是多少年了？ 72 年，大家再猜一猜在这短短的 72 年时间里，计算机的运算速度提高了多少倍？大约是 18 万亿倍。可以说，我们还没有哪个行业能够像信息技术行业一样，发展如此之迅速，以至于当年我高考填志愿时流传着这样的话：不要报计算机专业，发展太快了，学校里学的出来就用不上了。我不知道这样的谣言从何而起，我看的那本计算机科学导论里面，作者说的是：从上世纪五十年代至今，计算机的基本原理几乎没有变过。</p>

<h1>3 计算机发展历史</h1>

<p>我们先从计算机的<a href="/computer_science/computer_science_introduction/2018/07/07/FCS1_introduction.html">发展历史</a>开始讲起：</p>

<p>1642 年，为了减轻他父亲无止尽地、重复地计算税务的收支负担，当时 19 岁的法国人布莱斯·帕斯卡（Blaise Pascal）发明了一台用来进行加减运算的计算机器 Pascsline. 说起帕斯卡这个人，可以说是个全才式的人物，维基百科上给他的头衔非常多，说他是法国神学家、哲学家、数学家、物理学家、化学家、音乐家、教育家、气象学家。在物理学上，压强的单位帕就是为纪念帕斯卡而命名的，在数学上，大家都知道有个帕斯卡三角（我们称之为杨辉三角），帕斯卡推动了两个重要数学领域的发展，一个是几何，一个是概率论。帕斯卡 16 岁写的论文里面论证的被后世称为帕斯卡定理的结果是射影几何中的一条重要定理，1654 年 7~10 月间，53 岁的费马和 31 岁的帕斯卡来往了七封书信，讨论了具体的赌博问题，在解决这些问题时，他们广泛使用了组合工具和递推公式以及初等概率论中的一些基本计算法则。这其中，帕斯卡利用递推公式和帕斯卡三角给出了卡丹诺所提的 “分赌本问题” 的正确解法。我国已故统计界唯一的中科院院士陈希孺老师在其所著的 《数理统计简史》 中说：分赌本问题的正确解决，引进了作为数学期望前身的赌博的值（value）的概念，使得概率计算开始从初期简单计数步入精细化阶段。</p>

<blockquote>1539年，卡丹诺在其一本著作中，提到了一个这样的问题：A、B两人赌博，各出注金a元，每局各人获胜概率均为1/2，规定谁先胜S局，谁就赢得全部注金2a元。现赌博因故停止而A已胜S1局，B已胜S2局，问此时注金应如何分配给A和B才算公平？这是著名的“分赌本问题”，它在概率发展史上起过重要的作用。</blockquote>

<blockquote>1564年，卡丹诺写成《The Book of Games of Chance》一书，该书在人类历史上第一次系统阐述了概率，并将概率作为有效赌博方法的一个组成部分。它从道德、理论和实践等方面对赌博作了全面探讨，例如：它回答了什么时候适合赌博，如何判断赌博是否公正，如何识别和防止赌博欺诈，赌博者的个性对结局的影响等问题，它还明确指出骰子应该是诚实（honest）的并明确定义胜率（odds）为有利结果数（favorable outcomes）与不利结果数（unfavorable outcomes）之比。卡丹诺虽然在书中导出了如今我们十分熟悉的组合公式，但遗憾的是，书中并未利用这一有力工具去解决有关赌博的概率计算问题。卡丹诺所处的那个时代，人们关于排列组合的结果还知之甚少，对频率与概率的关系，尤其是对“频率逼近概率”这一后来被伯努利称之为“笨人皆知”的事实尚无多少认识。</blockquote>

<p>1671 年，德国数学家戈特弗里德·莱布尼兹（Gottfried Leibnitz）在帕斯卡加减机械计算机的基础上加以改进，发明了一台可作四则运算的计算机器 Leibnitz's Wheel.莱布尼兹，大名鼎鼎的人物，大家都知道，他和牛顿先后独立地发明了微积分，那个著名的牛顿——莱布尼兹公式建立了定积分与不定积分的联系，大大简化了定积分的计算。莱布尼兹也是历史上少见的通才，被誉为十七世纪的亚里士多德，他本人是律师，经常往返于各大城镇，他许多的公式都是在颠簸的马车上完成的。</p>

<p>1801 年，法国发明家约瑟夫-玛丽·雅卡尔（Joseph-Marie Jacquard）设计出了人类历史上首台可设计织布机，其可设计性体现在可以利用穿孔卡控制织布过程中经线的提升，这是人类历史上第一台利用存储和编程概念的机器。</p>

<p>1823 年，英国发明家查尔斯·巴贝奇（Charles Babbage）发明了可解多项式方程的差分引擎，后来他又发明了一种叫做分析引擎的机器。该机器在某种程度上和现代计算机的概念类似，它由一个类似于算术逻辑单元的制造场、一个存储单元、一个类似于控制单元的操作者和输入/输出单元构成。1828 年至 1839 年，巴贝奇曾在剑桥大学担任卢卡斯教授，卢卡斯教授是英国剑桥大学的一个荣誉职位，授予对象为数理相关的研究者，同一时间只授予一人，获得这个荣誉职位的，在巴贝奇之前有大名鼎鼎的艾萨克·牛顿，他在 1687 年发表的 《自然哲学的数学原理》 中构建的力学理论体系影响了后世两百多年，直到 1905 年和 1915 年爱因斯坦相继发表狭义相对论和广义相对论，才颠覆了人们对于引力的认识。在巴贝奇之后获得这个荣誉职位的有量子力学奠基者之一的保罗·狄拉克，有我们当代最著名的理论物理学家刚刚过世不久的史蒂芬·霍金。</p>

<p>1890 年，在美国人口普查办公室工作的赫尔曼·何勒里斯（Herman Hollerith）设计并制造出了可以自动阅读、计数和排列存储在穿孔卡上数据的具有编程能力的机器。</p>

<p>1937 年，英国数学家、逻辑学家，计算机科学与人工智能之父阿兰·图灵（Alan Turing）首次提出了一个通用计算设备的构想，他设想所有的计算都可能在一种特殊的机器上执行，这种机器我们今天称之为图灵机（Turing machine）。阿兰·图灵将计算机定义为一种可编程数据处理器模型即图灵模型（Turing model），在图灵模型中，程序是一系列用来告诉计算机如何处理数据的指令。</p>

<p class="post-text-center"><img src="/assets/img/Natural_Science/Computer_Science/Introduction/turing model.png"></p>
<p class="post-text-tablename">图 1-1 可编程数据处理模型</p>

<p class="post-text-noindent">1950 年，图灵发表的 《计算机器与智能》 这篇论文啊，被视为人工智能的开山之作，我最近正在读这篇论文，一共 22 页，刚读了 6 页。在这篇论文里提出的了一个著名的验证机器是否具有智能的方法，今天我们称之为图灵测试。</p>

<blockquote>图灵测试：如果一个人（代号C）使用测试对象皆理解的语言去询问两个他不能看见的对象任意一串问题。对象为：一个是正常思维的人（代号B）、一个是机器（代号A）。如果经过若干询问以后，C不能得出实质的区别来分辨A与B的不同，则此机器A通过图灵测试。</blockquote>

<p>1938 年，德国土木建筑工程师康拉德·朱斯（Konrad Zuse）设计出了一台机械式通用计算机 Z1，第二年他又利用一些电话公司废弃的继电器组装了一台电磁式计算机 Z2，他的工作引起德国飞机试验研究所的关注，这使他获得了一笔资金。1941 年，他使用 2600 个继电器组装了他的第二台电磁式计算机 Z3，它每秒能执行 3-4 次加法运算并能在 3-5 秒内执行一次乘法运算。1944 年，美国空军对柏林实施空袭，Z3 连同他的住宅一起被炸得支离破碎。1945年，他又建造了一台更先进的电磁式计算机 Z4，其存储器单元从 64 位扩展到 1024 位，其继电器则几乎占满了一个房间。为了使机器运行效率更高，他还设计了一种编程语言 Plankalkuel. 1995 年 12 月，85 岁的康拉德·朱斯与世长辞，他是世界上最早提出程序设计概念的人之一，后来的计算机史学家不禁感慨：如果康拉德·朱斯不是生活在法西斯统治下的德国，他可能早已把他的计算机升级为电子计算机，因为早在 1938 年他和他的朋友已经在考虑用 2000 个电子管和其他电子元件组装新的计算机，这样一来人类电子计算机的历史就会被改写，他的发明将属于德国而非美国。后来康拉德·朱斯创办的朱斯计算机公司于 1958 年研制出了电子管通用计算机 Z-22R，而这离世界上第一台电子管通用计算机的诞生已过去 12 年之久。</p>

<p>1939 年，美国人约翰·阿塔纳索夫（John V.Atanasoff）及其助手克利福德·贝里（Clifford Berry）研制出了世界上第一台主要用来解线性方程的电子计算机 ABC（Atanasoff Berry Computer）。</p>

<p>1944 年，耗时7年，由美国哈佛大学应用数学系教授霍华德·阿肯（Howard Aiken）受巴贝奇思想启发而设计，由 IBM 公司承建并由美国海军提供经费支持的巨型继电器式计算机交付使用，它重达 5 吨，长约 15.54米，高约 2.44 米。这是人类历史上首台自动按序控制计算器，虽然它执行一次乘法需要 6 秒，但其精度可达到小数点后 23 位。</p>

<p>1945 年 6 月，原籍匈牙利的美国人冯·诺依曼发表了一份长达 101 页的报告，这就是著名的 “关于 EDVAC 的报告草案”（First Draft of a Report on the EDVAC）,在这份报告中提出的计算机体系结构即冯·诺依曼模型（von Neumann model）一直延用至今。图 1-2 展示了冯·诺依曼模型，它由算术逻辑单元（ALU）、控制单元、存储器、输入/输出单元五大部分构成。在图灵机的基础上，冯·诺依曼创造性地指出：由于程序和数据在逻辑上是相同的，因此程序也能存储在计算机的存储器中。</p>

<blockquote>
<strong>算术逻辑单元</strong>：用来对数据进行算术运算和逻辑运算<br>
<strong>控制单元</strong>：用来控制存储器、算术逻辑单元、输入/输出单元的操作<br>
<strong>存储器</strong>：用来存储数据和程序<br>
<strong>输入/输出单元</strong>：用来从计算机外部接收数据和程序并将处理结果输出到计算机外部，值得注意的是辅助存储设备如磁盘和磁带也属于输入/输出单元的范畴
</blockquote>

<p class="post-text-center"><img src="/assets/img/Natural_Science/Computer_Science/Introduction/von Neumann model.png"></p>
<p class="post-text-tablename">图 1-2 冯·诺依曼模型</p>

<p><strong>1946 年 2 月 14 日</strong>，这是一个无论怎么强调也不为过的日子，在这个无数男男女女享受着无尽甜蜜与幸福的日子里，美国人<strong>约翰·莫奇勒</strong>（<em>John Mauchly</em>）和<strong>普雷斯波·埃克特</strong>（<em>J.Presper Eckert</em>）发明的世界上第一台通用的、完全电子的十进制计算机 <strong>ENIAC</strong> 在美国宾夕法尼亚大学诞生。这台因战争的迫切需要、耗资 48 万美元研制成功的庞然大物重达 30 吨，长约 30.48 米，宽约 6 米，高约 2.4 米，占地面积约 170 平方米。它包含 17468 根电子管、7200 根晶体管、1500 个中转、70000 个电阻器、10000 个电容器、1500 个继电器和 6000 多个开关，计算速度达到每秒 5000 次加法或 400 次乘法，是使用继电器运转的机电式计算机的 1000 倍，手工计算的 20 万倍。<strong>ENIAC</strong> 的研制成功宣告了一个崭新时代的到来，从此人类的计算能力被机器远远地甩在身后，今天我们运算速度最快的超级计算机的峰值计算能力已达到每秒 12.5 亿亿次，持续计算能力也已达到每秒 9.3 亿亿次。</p>

<p>1949 年 5 月 6 日，英国剑桥大学的<strong>莫里斯·威尔克斯</strong>（<em>Maurice Wilkes</em>）基于冯·诺依曼模型制造了世界上第一台商用的程序内藏式电子计算机 <strong>EDSAC</strong>（<em>Electronic Delay Storage Automatic Calculator</em>，电子延迟存储自动计算机），与此同时的 1949 年 8 月，<strong>约翰·莫奇勒</strong>（<em>John Mauchly</em>）和<strong>普雷斯波·埃克特</strong>（<em>J.Presper Eckert</em>）基于冯·诺依曼模型建造了一台通用、完全电子的二进制计算机 <strong>EDVAC</strong>（<em>Electronic Discrete Variable Automatic Computer</em>，离散变量自动电子计算机）也研制完成。</p>

<p>自 1950 年开始后出现的几乎所有计算机均基于冯·诺依曼模型，它们先后经历<strong>电子管时代</strong>、<strong>晶体管时代</strong>、<strong>集成电路（晶体管、导线及其他部件做在一块单芯片上）时代</strong>的发展，速度变得越来越快、体积变得越来越小、价格变得越来越便宜，但原理几乎相同。</p>

<p>我们可以把今天的计算机看作三大部分的结合体，即<strong>计算机硬件</strong>、<strong>数据</strong>和<strong>计算机软件</strong>，当今的计算机硬件基于冯·诺依曼模型，冯·诺依曼模型清楚地将一台计算机定义为一台<strong>数据处理器</strong>（<em>data processor</em>），处理数据的任务由程序完成，而各种各样不同的程序（算法、计算机语言、操作系统等）则构成计算机软件。</p>


<h1>4 数据存储</h1>

<p>我们先从数据讲起，先讲数据是如何在计算机中<a href="/computer_science/computer_science_introduction/2018/07/15/FCS2_data-storage.html">存储</a>的，讲这个之前强调一点：计算机只认识两个数，一个是 0，一个是 1，说白了计算机就是一堆材料组成的一个大规模电路，这个 0 可能对应低电压，1 可能对应高电压，这个呢我也不清楚，高中的电路知识已忘得一干二净，我们先记住这一点就好了：计算机只认识 0 和 1.</p>

<p>我们说数据，它实际上包括了数字、文本、音频、图像和视频，它们都以位（bit, binary digit）的形式存储在计算机中，binary digit 是二进制数的意思，我不知道大家之前知不知道这个事实，就是所有这些东西居然都可以变成0,1数字串然后存储在计算机中，反正当我第一次知道这件事情的时候我感到无比的神奇，这帮人真是太聪明了，能把这个世界上如此纷繁复杂的信息浓缩在两个数字组成的序列里。由于各种类型的数据最终都以数字的形式存储在计算机中，所以我们首先讲计算机是如何存储整数和小数的。</p>

<p>我们知道整数有正有负，正的整数好说是吧，把十进制转换成二进制就好了，负的整数怎么办呢，计算机怎么存储负的整数呢？我们不可能扔给计算机一个负号，然后告诉它，咯，注意了这是一个负数，你把它砸烂它也不认识。我们最容易想到的一个办法是，在前面添加一个符号位，比如用 0 表示正，用 1 表示负。但计算机中并不是以这种方式存储有符号整数的，其原因是这种存储方式会使有符号整数的运算变得相当复杂，这个后面再讲。计算机中存储有符号整数的方法称为补码表示法，下面举个例子说一下补码表示法（例：图 2-5，图 2-6）。</p>

<p class="post-text-center"><img src="/assets/img/Natural_Science/Computer_Science/Introduction/complement operation.png"></p>
<p class="post-text-tablename">图 2-5 取整数 00110100 的补码</p>

<p class="post-text-center"><img src="/assets/img/Natural_Science/Computer_Science/Introduction/complement representation.png"></p>
<p class="post-text-tablename">图 2-6 补码表示法</p>

<p>下面讲小数的存储方法——浮点表示法，这比整数的存储要复杂很多了。一个数字的浮点表示法由符号（S, sign）、指数（E, exponent）和尾数（M, mantissa）三部分组成。其中指数部分表示小数点移动的位数，采用余码（excess code）的方式存储，尾数则是小数点右边的二进制数，它采用无符号表示法存储，小数点左边仅留一位、不进行存储且其取值由指数部分决定。下面举个例子说一下浮点表示法（在 IEEE 32 位精度下用浮点表示法表示 5.75）。</p>

<blockquote>电气电子工程师学会（英语：Institute of Electrical and Electronics Engineers，简称为IEEE，英文读作“i triple e”[ai trɪpl i:]）是一个建立于1963年1月1日的国际性电子技术与电子工程师协会，亦是世界上最大的专业技术组织之一，拥有来自175个国家的36万会员。除设立于美国纽约市的总部以外，亦在全球150多个国家拥有分会，并且还有35个专业学会及2个联合会。其每年均会发表多种杂志、学报、书籍，亦举办至少300次的专业会议。目前IEEE在工业界所定义的标准有着极大的影响。</blockquote>

<p>好，讲完了数字的存储，下面来看文本是如何在计算机中存储的。在任何语言中，文本（text）都可以看作是一系列字符的组合，将文本数字化只需要将语言中的字符集与数字一一对应起来即可。进一步，在计算机中，就是要将语言字符集与位模式（bit pattern）即位串一一对应起来。若语言字符集中字符数量为 n，则所需位模式的长度为 log2n。32 位可以表示大约 4.3 亿个字符。</p>

<p>下面来讲音频的存储</p>

<p>下面来讲图像的存储</p>

<p>下面来讲视频的存储</p>

</div>

